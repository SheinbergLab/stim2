name: Release for Linux

on:
  push:
    tags:
      - '*'

jobs:

  release:

    strategy:
      matrix:
        # Build on not-the-latest to keep dependency versions modest.
        os: [ubuntu-22.04, ubuntu-22.04-arm]

    runs-on: ${{ matrix.os }}

    permissions:
        contents: write

    steps:

      - name: Install build tools, and depdendencies for tlc 9, glfw, stim2, and stimdlls.
        run: |
          sudo apt update
          sudo apt install -y ca-certificates build-essential cmake pkg-config cmake-data
          sudo apt install -y zlib1g-dev
          sudo apt install -y libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev libwayland-dev libxkbcommon-dev
          sudo apt install -y libglew-dev libglm-dev
          sudo apt install -y libopenal-dev libfreetype-dev

      - name: Check out our stim2 code for the current tag.
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install TCL 9 to the build environment.
        run: |
          cd deps/tcl/unix/
          ./configure
          make
          sudo make install

      - name: Install GLFW static lib into the build environment.
        run: |
          cd deps/glfw/
          cmake -B build-full-static -D GLFW_BUILD_WAYLAND=ON -D GLFW_BUILD_X11=ON
          cmake --build build-full-static --parallel
          sudo cmake --install build-full-static

      - name: Install spine-c static lib into the build environment.
        run: |
          cd deps/spine-runtimes/spine-c/
          cmake -B build -D CMAKE_POSITION_INDEPENDENT_CODE=ON
          cmake --build build --parallel
          cmake --install build --prefix ./build
          sudo mkdir -p /usr/local/include/spine/
          sudo cp ./build/dist/include/*.h /usr/local/include/spine/
          sudo cp ./build/dist/lib/*.a /usr/local/lib

      - name: Install box2d v3 static lib into the build environment.
        run: |
          git clone https://github.com/erincatto/box2d.git
          cd box2d
          mkdir build
          cmake -B build -D BOX2D_UNIT_TESTS=OFF -D BOX2D_SAMPLES=OFF -D BOX2D_BENCHMARKS=OFF -D BUILD_SHARED_LIBS=OFF
          cmake --build build --parallel
          sudo cmake --install build

      # TODO: obtain dlsh from SheinbergLab, not benjamin-heasly
      - name: Install our dlsh libs and headers into the build environment.
        run: |
          DLSH_VERSION=0.0.23
          wget https://github.com/benjamin-heasly/dlsh/releases/download/${DLSH_VERSION}/dlsh_${DLSH_VERSION}_$(dpkg --print-architecture).deb
          sudo dpkg --install dlsh_${DLSH_VERSION}_$(dpkg --print-architecture).deb

      - name: Build stim2 stimdlls, to include along with the stim2 executable.
        run: |
          cd stimdlls/
          cmake -D PROJECT_VERSION=${{ github.ref_name }} -B build
          cmake --build build --parallel

      - name: Build stim2 itself and package it for release.
        run: |
          cmake -D PROJECT_VERSION=${{ github.ref_name }} -B build
          cmake --build build --parallel
          cpack -G DEB --config build/CPackConfig.cmake

      - name: Create a GitHub release for the current tag and package.
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./stim2*.deb
          body: stim2 version ${{ github.ref_name }}
          generateReleaseNotes: true
          allowUpdates: true

  check:

    needs: release

    strategy:
      matrix:
        # Check on latest to confirm compatibility.
        os: [ubuntu-24.04, ubuntu-24.04-arm]

    runs-on: ${{ matrix.os }}

    steps:

      - name: Install the package we just released.
        run: |
          wget ${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.ref_name }}/stim2_${{ github.ref_name }}_$(dpkg --print-architecture).deb
          sudo apt install --yes ./stim2_${{ github.ref_name }}_$(dpkg --print-architecture).deb

      # TODO: obtain dserv from SheinbergLab, not from benjamin-heasly.
      - name: Install dserv along with the shared tcl 9 dependency.
        run: |
          DSERV_VERSION=0.0.48
          wget https://github.com/benjamin-heasly/dserv/releases/download/${DSERV_VERSION}/dserv_${DSERV_VERSION}_$(dpkg --print-architecture).deb
          sudo apt install --yes ./dserv_${DSERV_VERSION}_$(dpkg --print-architecture).deb

      # TODO: obtain dlsh from SheinbergLab with a version, not from benjamin-heasly with "initial"
      - name: Install our dlsh TCL utils and thier dependencies into the packaging dir.
        run: |
          mkdir -p /tmp/package/usr/local/dlsh
          cd /tmp/package/usr/local/dlsh
          wget https://github.com/benjamin-heasly/dlsh/releases/download/initial/dlsh.zip

      - name: Sanity check the installed package.
        run: |
          ls -alth /usr/local/bin
          which stim2
          stim2 --help
          timeout --preserve-status --signal SIGINT 2 stim2 || echo "$?"
